{"version":3,"file":"static/js/200.b7c5f327.chunk.js","mappings":"sMAMA,MAgIA,EAhImBA,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,EAAO,gBAAEC,EAAe,iBAAEC,EAAgB,cAAEC,IAAkBC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAOjG,OAAIN,EAAQO,SAERC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OACEF,UAAU,+CACVG,MAAM,6BACNC,KAAK,OACLC,QAAQ,YAAWJ,SAAA,EAEnBF,EAAAA,EAAAA,KAAA,UACEC,UAAU,aACVM,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAO,eACPC,YAAY,OAEdX,EAAAA,EAAAA,KAAA,QACEC,UAAU,aACVI,KAAK,eACLO,EAAE,wHAGNZ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBC,SAAC,sCAOxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SACC,IAA3BT,EAAgBoB,QACfb,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,UACrDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAC,iCAKvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBT,EAAgBqB,KAAIhB,IACnBK,EAAAA,EAAAA,MAAA,OAEEF,UAAU,+LAgBVc,QAASA,IAhEOjB,KAC1BR,GAAS0B,EAAAA,EAAAA,IAAkBlB,IAC3BV,EAAS,WAAWU,EAAOmB,KAAK,EA8DPC,CAAmBpB,GAAQI,SAAA,EAG1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+GAWfC,SACEJ,EAAOqB,QAEVhB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sCAAqCC,SAClDJ,EAAOsB,UAEVpB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+CAA8CC,SAC3DJ,EAAOuB,cAMdlB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kCAAiCC,UAC9CoB,EAAAA,EAAAA,GAAYC,WAAWzB,EAAO0B,UAAW9B,EAAkBC,MAE9DQ,EAAAA,EAAAA,MAAA,QACEF,UAAW,2MAQPsB,WAAWzB,EAAO2B,oBAAsB,EACpC,8BACA,gDAENvB,SAAA,CAEDqB,WAAWzB,EAAO2B,mBAAmBC,QAAQ,GAAG,YAjEhD5B,EAAOmB,SAwEhB,C","sources":["components/CryptoList.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSelectedCrypto } from '../store/cryptoSlice';\nimport { formatPrice } from '../utils/formatters';\n\nconst CryptoList = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { loading, filteredCryptos, selectedCurrency, exchangeRates } = useSelector(state => state.crypto);\n\n  const handleCryptoSelect = (crypto) => {\n    dispatch(setSelectedCrypto(crypto));\n    navigate(`/crypto/${crypto.id}`);\n  };\n\n  if (loading.cryptos) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"text-center\">\n          <svg \n            className=\"animate-spin h-10 w-10 mx-auto text-blue-500\" \n            xmlns=\"http://www.w3.org/2000/svg\" \n            fill=\"none\" \n            viewBox=\"0 0 24 24\"\n          >\n            <circle \n              className=\"opacity-25\" \n              cx=\"12\" \n              cy=\"12\" \n              r=\"10\" \n              stroke=\"currentColor\" \n              strokeWidth=\"4\"\n            ></circle>\n            <path \n              className=\"opacity-75\" \n              fill=\"currentColor\" \n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            ></path>\n          </svg>\n          <p className=\"mt-4 text-gray-600\">Loading cryptocurrencies...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-2 sm:px-4\">\n      {filteredCryptos.length === 0 ? (\n        <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n          <p className=\"text-gray-600 text-xl\">\n            No cryptocurrencies found\n          </p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {filteredCryptos.map(crypto => (\n            <div \n              key={crypto.id}\n              className=\"\n                bg-white \n                shadow-sm \n                rounded-lg \n                p-3 \n                flex \n                items-center \n                justify-between\n                hover:shadow-md \n                transition-all \n                duration-300 \n                cursor-pointer \n                border \n                border-transparent \n                hover:border-blue-200\n              \"\n              onClick={() => handleCryptoSelect(crypto)}\n            >\n              {/* Left Section - Rank, Symbol, Name */}\n              <div className=\"flex items-center space-x-3\">\n                <span className=\"\n                  bg-gray-100 \n                  text-gray-700 \n                  rounded-full \n                  w-7 \n                  h-7 \n                  flex \n                  items-center \n                  justify-center \n                  text-sm \n                  font-bold\n                \">\n                  {crypto.rank}\n                </span>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-semibold text-gray-800 text-sm\">\n                    {crypto.symbol}\n                  </span>\n                  <span className=\"text-xs text-gray-500 truncate max-w-[100px]\">\n                    {crypto.name}\n                  </span>\n                </div>\n              </div>\n\n              {/* Right Section - Price, Change */}\n              <div className=\"flex flex-col items-end\">\n                <span className=\"font-bold text-gray-900 text-sm\">\n                  {formatPrice(parseFloat(crypto.priceUsd), selectedCurrency, exchangeRates)}\n                </span>\n                <span \n                  className={`\n                    text-xs \n                    font-medium \n                    px-1.5 \n                    py-0.5 \n                    rounded \n                    mt-1\n                    ${\n                      parseFloat(crypto.changePercent24Hr) >= 0 \n                        ? 'bg-green-100 text-green-800' \n                        : 'bg-red-100 text-red-800'\n                    }\n                  `}\n                >\n                  {parseFloat(crypto.changePercent24Hr).toFixed(2)}%\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CryptoList;"],"names":["CryptoList","navigate","useNavigate","dispatch","useDispatch","loading","filteredCryptos","selectedCurrency","exchangeRates","useSelector","state","crypto","cryptos","_jsx","className","children","_jsxs","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","length","map","onClick","setSelectedCrypto","id","handleCryptoSelect","rank","symbol","name","formatPrice","parseFloat","priceUsd","changePercent24Hr","toFixed"],"sourceRoot":""}