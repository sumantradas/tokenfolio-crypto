{"version":3,"file":"static/js/200.43f07d2e.chunk.js","mappings":"wNAOA,MA8CA,EA9CmBA,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,EAAO,gBAAEC,EAAe,iBAAEC,EAAgB,cAAEC,IAAkBC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAOjG,OAAIN,EAAQO,SAERC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,SAAQH,UACvCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,SAAC,oBAO5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SACjCT,EAAgBa,KAAIR,IACnBS,EAAAA,EAAAA,MAAA,OAEEN,UAAU,qJACVO,QAASA,IArBeV,KAC1BR,GAASmB,EAAAA,EAAAA,IAAkBX,IAC3BV,EAAS,WAAWU,EAAOY,KAAK,EAmBfC,CAAmBb,GAAQI,SAAA,EAE1CK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,uEAAsEC,SAAA,EACnFK,EAAAA,EAAAA,MAAA,QAAMN,UAAU,YAAWC,SAAA,CAAC,IAAEJ,EAAOc,SACrCZ,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAEJ,EAAOe,UACpCb,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAOgB,WAEhBP,EAAAA,EAAAA,MAAA,OAAKN,UAAU,oFAAmFC,SAAA,EAChGF,EAAAA,EAAAA,KAAA,QAAAE,UAAOa,EAAAA,EAAAA,GAAYC,WAAWlB,EAAOmB,UAAWvB,EAAkBC,MAClEY,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACC,GAAIH,WAAWlB,EAAOsB,oBAAsB,EAAI,UAAY,SAASlB,SAAA,CACzEc,WAAWlB,EAAOsB,mBAAmBC,QAAQ,GAAG,YAZhDvB,EAAOY,OAiBZ,C","sources":["components/CryptoList.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Badge, Spinner } from 'react-bootstrap';\nimport { setSelectedCrypto } from '../store/cryptoSlice';\nimport { formatPrice } from '../utils/formatters';\n\nconst CryptoList = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { loading, filteredCryptos, selectedCurrency, exchangeRates } = useSelector(state => state.crypto);\n\n  const handleCryptoSelect = (crypto) => {\n    dispatch(setSelectedCrypto(crypto));\n    navigate(`/crypto/${crypto.id}`);\n  };\n\n  if (loading.cryptos) {\n    return (\n      <div className=\"flex justify-center p-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </div>\n    );\n  }\n\n  return (\n<div className=\"flex flex-col gap-2\">\n  {filteredCryptos.map(crypto => (\n    <div\n      key={crypto.id}\n      className=\"flex flex-col md:flex-row justify-between items-start md:items-center p-4 bg-gray-50 rounded-md cursor-pointer hover:bg-gray-100 transition-colors\"\n      onClick={() => handleCryptoSelect(crypto)}\n    >\n      <div className=\"flex flex-col md:flex-row gap-2 md:gap-4 items-start md:items-center\">\n        <span className=\"font-bold\">#{crypto.rank}</span>\n        <span className=\"font-bold\">{crypto.symbol}</span>\n        <span>{crypto.name}</span>\n      </div>\n      <div className=\"flex flex-col md:flex-row gap-2 md:gap-4 items-start md:items-center mt-2 md:mt-0\">\n        <span>{formatPrice(parseFloat(crypto.priceUsd), selectedCurrency, exchangeRates)}</span>\n        <Badge bg={parseFloat(crypto.changePercent24Hr) >= 0 ? 'success' : 'danger'}>\n          {parseFloat(crypto.changePercent24Hr).toFixed(2)}%\n        </Badge>\n      </div>\n    </div>\n  ))}\n</div>\n\n  );\n};\n\nexport default CryptoList;"],"names":["CryptoList","navigate","useNavigate","dispatch","useDispatch","loading","filteredCryptos","selectedCurrency","exchangeRates","useSelector","state","crypto","cryptos","_jsx","className","children","Spinner","animation","role","map","_jsxs","onClick","setSelectedCrypto","id","handleCryptoSelect","rank","symbol","name","formatPrice","parseFloat","priceUsd","Badge","bg","changePercent24Hr","toFixed"],"sourceRoot":""}